name: Build and Test Extension

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: xvfb-run -a npm test
      env:
        DISPLAY: ":99.0"

    - name: Package Extension
      run: npm run package

    - name: Get version from package.json
      id: get_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Upload VSIX as artifact (PR only)
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: vscode-local-file-picker-${{ steps.get_version.outputs.version }}
        path: ./vscode-local-file-picker-${{ steps.get_version.outputs.version }}.vsix
        retention-days: 30

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Package Extension
      run: npm run package

    - name: Get version from package.json
      id: get_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          See [CHANGELOG.md](./CHANGELOG.md) for details.
        files: ./vscode-local-file-picker-${{ steps.get_version.outputs.version }}.vsix
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
